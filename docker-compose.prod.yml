version: '3.8'

services:
  # Backend service
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
      target: production
    ports:
      - "4000:4000"
    environment:
      - NODE_ENV=production
      - PORT=4000
      - LOG_LEVEL=info
      - LOGS_DIR=/app/logs
      - D1_PATH=/app/data/db.sqlite
      - R2_ROOT=/app/data/r2
      - SENTRY_DSN=${SENTRY_DSN}
      - APP_VERSION=${APP_VERSION:-1.0.0}
volumes:
  # Application data volumes
  backend_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${DATA_DIR:-./data}/backend
  backend_logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${LOGS_DIR:-./logs}/backend
  frontend_build:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${BUILD_DIR:-./build}/frontend
  
  # Database and storage volumes
  database_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${DATA_DIR:-./data}/database
  redis_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${DATA_DIR:-./data}/redis
  
  # Nginx and logs volumes
  nginx_logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${LOGS_DIR:-./logs}/nginx
  
  # Backup and migration volumes
  backup_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${BACKUP_DIR:-./backups}
  migration_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${MIGRATION_DIR:-./migrations}    depends_on:
      - backend
      - frontend
    restart: unless-stopped
    networks:
      - ccsb-network
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: '0.25'

volumes:
  # Application data volumes
  backend_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${DATA_DIR:-./data}/backend
  backend_logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${LOGS_DIR:-./logs}/backend
  frontend_build:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${BUILD_DIR:-./build}/frontend
  
  # Database and storage volumes
  database_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${DATA_DIR:-./data}/database
  redis_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${DATA_DIR:-./data}/redis
  
  # Nginx and logs volumes
  nginx_logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${LOGS_DIR:-./logs}/nginx
  
  # Backup and migration volumes
  backup_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${BACKUP_DIR:-./backups}
  migration_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${MIGRATION_DIR:-./migrations}    driver: local

networks:
  ccsb-network:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: ccsb-bridge


